---
AWSTemplateFormatVersion: 2010-09-09

Description: Stack to deploy a EC2 instance, VPC, SecurityGroup.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: General AWS
      Parameters:
        - EC2KeyName
        - SshAccessCidr
    - Label:
        default: Network
      Parameters:
        - VpcCidr
        - VpcTenancy
        - AvailabilityZones
        - PublicSubnetCidr
    - Label:
        default: EC2 Tier
      Parameters:
        - EC2InstanceType
    ParameterLabels:
      EC2InstanceType:
        default: EC2 Instance Type
      EC2KeyName:
        default: EC2 Key Pair
      SshAccessCidr:
        default: SSH Access From
      VpcCidr:
        default: VpcCidr
      VpcTenancy:
        default: VpcTenancy
      AvailabilityZones:
        default: Availability Zones
      PublicSubnetCidr:
        default: Public Subnet

Parameters:
  EC2InstanceType:
    AllowedValues:
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
    ConstraintDescription: Must be a valid Amazon EC2 instance type.
    Default: t3.nano
    Description: Bastion EC2 instance type.
    Type: String
  EC2KeyName:
    ConstraintDescription: Must be letters (upper or lower), numbers, and special characters.
    Description: Name of an EC2 KeyPair. Your bastion & Web instances will launch with this KeyPair.
    Type: AWS::EC2::KeyPair::KeyName
  SshAccessCidr:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: The CIDR IP range that is permitted to SSH to bastion instance. Note - a value of 0.0.0.0/0 will allow access from ANY IP address.
    Type: String
    Default: 0.0.0.0/0
  VpcCidr:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
    Description: CIDR block for the VPC
    Type: String
  VpcTenancy:
    AllowedValues:
    - default
    - dedicated
    Default: default
    Description: The allowed tenancy of instances launched into the VPC
    Type: String
  AvailabilityZones:
    Description: 'List of Availability Zones to use for the subnets in the VPC. Note:
      The logical order is preserved.'
    Type: AWS::EC2::AvailabilityZone::Name
  PublicSubnetCidr:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.200.0/24
    Description: CIDR block for Public subnet located in Availability Zone
    Type: String

Resources:
  vpc:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        AvailabilityZones:
          !Ref AvailabilityZones
        PublicSubnetCidr:
          !Ref PublicSubnetCidr
      TemplateURL: https://cfm-ec2.s3.ap-southeast-1.amazonaws.com/01-newvpc.yaml

  securitygroups:
    DependsOn: vpc
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        SshAccessCidr:
          !Ref SshAccessCidr
        Vpc:
          !GetAtt [ vpc, Outputs.Vpc ]
      TemplateURL: https://cfm-ec2.s3.ap-southeast-1.amazonaws.com/02-securitygroups.yaml

  myec2:
    DependsOn: securitygroups
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        EC2InstanceType:
          !Ref EC2InstanceType
        EC2SecurityGroup:
          !GetAtt [ securitygroups, Outputs.EC2SecurityGroup ]
        EC2KeyName:
          !Ref EC2KeyName
        Subnet:
          !GetAtt [ vpc, Outputs.PublicSubnet ]
      TemplateURL: https://cfm-ec2.s3.ap-southeast-1.amazonaws.com/03-myec2.yaml